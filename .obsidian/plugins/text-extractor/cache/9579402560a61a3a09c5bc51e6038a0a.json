{"path":"Lecture Kmutt/INT204/materials/09-INT204-Spring-Rest-Api-File-Service.pdf","text":"Sp r in g R E S T fu l A PI Fi l e S er v i c es By Pi ch e t L i m v a j i r a n a n Se r v e r Si d e SP A R u n n i n g E n v i r o n m en t Fr o n t - En d A p p RE S T A P I S e r v i c e Re v e rs e P r ox y HT T P HT T P HT T P Fr o n t - En d VM / C o n t ai n e r VM / C o n t ai n e r VM / C o n t ai n e r VM htt p s : / h o s t . d o m a i n / . . htt p s : / h o s t . d o m a i n / a p i / . . Se r v e r Si d e F i l e S t o r a g e A r ch i t e ct u r e s ( 1 ) Fr o n t - En d A p p RE S T A P I + F i l e Se r vi c e Re v e rs e P r ox y HT T P HT T P HT T P Fr o n t - En d VM / C o n t ai n e r VM / C o n t ai n e r VM / C o n t ai n e r VM Se r v e r Si d e F i l e S t o r a g e A r ch i t e ct u r e s ( 2 ) Fr o n t - En d A p p RE S T A P I + F i l e Se r vi c e Re v e rs e P r ox y HT T P HT T P HT T P Fr o n t - En d VM / C o n t ai n e r VM / C o n t ai n e r VM / C o n t ai n e r VM Fi l e / St o r a g e Se r v e r VM / C o n t ai n e r Se r v e r Si d e F i l e S t o r a g e A r ch i t e ct u r e s ( 3 ) Fr o n t - En d A p p RE S T A P I Re v e rs e P r ox y HT T P HT T P HT T P Fr o n t - En d VM / C o n t ai n e r VM / C o n t ai n e r VM / C o n t ai n e r VM Fi l e Se r vi c e s VM / C o n t ai n e r Se r v e r Si d e F i l e S t o r a g e A r ch i t e ct u r e s ( 4 ) Fr o n t - En d A p p RE S T A P I Re v e rs e P r ox y HT T P HT T P HT T P Fr o n t - En d VM / C o n t ai n e r VM / C o n t ai n e r VM / C o n t ai n e r VM Cl o u d Se r vi c e s Fi l e Op er a ti o n • Up l o a d • Se n d f i l e – F o rm D a t a ( M u l t i p a rt ) / F i l e O n l y ( F E ) • Re a d f i l e d a t a f r o m H t t p Re q u e s t ( B E ) • Wr i t e f i l e t o s t o r a g e ( B E ) • Do w n l o a d • R e t u rn f i l e U R L / F i l e c o n t e n t • De l e t e • Re a d f i l e n a m e f r o m H t t p Re q u e s t • Re m o v e fi l e fr o m sto r a g e Co n f i gu r i n g S er v er a n d Fi l e S t o r a g e P r o p er ti es ## MULTIPART ( MultipartProperties ) # Enable multipart uploads spring.servlet.multipart.enabled = true # Max file size. spring.servlet.multipart.max - file - size = 10MB # Max Request Size spring.servlet.multipart.max - request - size = 80MB ## File Storage Properties # All files uploaded through the REST API will be stored in this directory file.upload - dir = /public/ classicmodels / uploads # Threshold after which files are written to disk. spring.servlet.multipart.file - size - threshold = 4 KB ## File Storage Properties # All files uploaded through the REST API will be stored in this directory file.upload - dir = ./product - images A u t o m a t i c a l l y b i n d i n g p r o p e r t i e s t o a P O J O cl a s s • S p r i n g B o o t h a s a n a w e s o m e f e a t u r e c a l l e d @ Co n f i gu r a t i o n P r o p e r t i e s u s i n g w h i c h y o u c a n a u t o m a t i c a l l y b i n d t h e p r o p e r t i e s d e f i n e d i n t h e ap p lic a tion . p r op e rtie s f i l e t o a P O J O c l a s s . • L e t ’ s d e f i n e a P O J O c l a s s c a l l e d Fi l e St o r a g e P r o p e r t i e s i n s i d e b a s e d - pa c k a g e . pr o pe r t i e s p a c k a g e t o b i n d a l l t h e f i l e s t o r a g e p r o p e r t i e s . @ ConfigurationProperties ( prefix = \"file\" ) @Getter @Setter public class FileStorageProperties { private String uploadDir ; } @ Sp r i n g B o o t A p p l i c a t i o n @ En a b l e C o n f i g u r a ti o n P r o p e rti e s ({ Fi l e St o r a g e P r o p e r t i e s . clas s }) publ i c c l a s s De m o A ppl i c a t i o n { publ i c s t a t i c v o i d m a i n(S t r i ng [ ] ar g s ) { file.upload - dir = ./ product - images B i n d i n g p r o p e r t i e s t o a P O J O cl a s s @ ConfigurationProperties ( prefix = \"file\" ) @Getter @Setter public class FileStorageProperties { private String uploadDir ; } @ EnableConfigurationProperties ({ FileStorageProperties . class }) Re g i s t e r C o n f i g u r a t i o n P r o p e r t y ( i n t o Appl i c a t i o nC o n f i g. ja v a or Cl as s i cm o d e l Se r vi ce A p p l i c a t i o n . j a v a ) Cr e a t e Co n f i g u r a t i o n p r o p e r t y c l a s s : F i l e St o r a g e P r o p e r t i e s .j a v a ( p a c k a g e ba s e d - pa ck a g e . pr o pe r t i e s Te s t pr o pe rti e s / P O J O bi ndi ng @ Re s t C o n t r o l l e r @ Re q u e s t M a p p i n g ( \"/ f i l es \" ) publ i c c l a s s Fi l e C o n t r o l l e r { @ Au t o w i r e d Fi l e St o r a g e P r o p e r t i e s file S t or ag e P r op e r t ie s ; @ Ge t M a p p i n g ( \"/ t es t \" ) publ i c Re s p o n s e E n t i t y < Ob j e c t > te s t P r o p e r t i e s M a p p i n g () { re t u r n Re s p o n s e E n t i t y . ok ( \"U p l o a d F o l d er ( D i r ec t o r y ) i s \\ \" \" + file S t or ag e P r op e r t ie s .g e t U p l o a d D i r ()+ \" \\ \" \" ); } } “ F i l e S e r v i ce : In i ti a l i z e @ Se r vi c e @G e t t e r publ i c c l a s s Fi l e Se r vi c e { pr i v a t e f i na l Pa t h file S t or ag e L oc a t ion ; @ Au t o w i r e d publ i c Fi l e Se r vi c e ( Fi l e St o r a g e P r o p e r t i e s file S t or ag e P r op e r t ie s ) { th i s . file S t or ag e L oc a t ion = Pa t h s . ge t ( file S t or ag e P r op e r t ie s . ge t U p l o a d D i r ()). to A b s o l u t e P a t h (). no r m a l i z e (); tr y { if (! Fi l e s . ex i s t s ( th i s . file S t or ag e L oc a t ion )) { Fi l e s . cr e a t e D ir e ct or ie s ( th i s . file S t or ag e L oc a t ion ); } } ca t c h ( IO Ex c e pti o n ex ) { th r o w n e w Ru n ti m e E x c e pti o n ( \"Co u l d n o t c r ea t e t h e d i r ec t o r y w h er e t h e u p l o a d ed f i l es w i l l b e s t o r ed . \" , e x ) ; } } im p o r t ja v a . i o . I O E x c e p t i o n ; im p o r t ja v a . n et . M a l f o r m e d UR L E x c e p t i o n ; im p o r t ja v a . n i o . f i l e . F i l e s ; im p o r t ja v a . n i o . f i l e . P a t h ; im p o r t ja v a . n i o . f i l e . P a t h s ; im p o r t ja v a . n i o . f i l e . S t a n d a r d C o p y O p t i o n ; Mo d i f y F i l e C o n tr o l l e r t o T e s t Fi l e S e r vi ce - In it ializ e @ Re s t C o n t r o l l e r @ Re q u e s t M a p p i n g ( \"/ f i l es \" ) publ i c c l a s s Fi l e C o n t r o l l e r { @ Au t o w i r e d Fi l e Se r vi c e file S e r v ice ; @ Ge t M a p p i n g ( \"/ t es t \" ) publ i c Re s p o n s e E n t i t y < Ob j e c t > te s t P r o p e r t i e s M a p p i n g () { re t u r n Re s p o n s e E n t i t y . ok ( file S e r v ice .g e t F i l e S t o r a g e L o c a t i o n ()+ \" h a s b een c r ea t ed ! ! ! \" ); } } Fi l e Se r v i ce : S t o r ing Fi l e ( a d d t h i s me tho d t o Fi l e Se r v i ce ) publ i c S t r i ng st o r e ( M ul t i pa r t F i l e fi l e ) { // N or m a l i z e f i l e n a m e S t r i ng fi l e N a me = S t r i ng U t i l s . cl e a n P a th ( f i l e . g e t O r i g i na l F i l e na m e ()); tr y { // C h e c k i f t h e f i l e ' s n a m e c on t a i n s i n v a l i d c h a r a c t e r s if ( fi l e N a me . c o n t a i ns ( \". . \" )) { t hr o w ne w R un t i m e E x c e p t i o n ( \" S o r r y ! F i l e na m e c o n t a i ns i n v a l i d pa t h s e que nc e \" + fi l e N a me ); } // C op y f i l e t o t h e t a r g e t l oc a t i on ( R e p l a c i n g e x i s t i n g f i l e w i t h t h e s a m e n a m e ) P a t h ta r g e t L o c a t i o n = t hi s . fi l e S t o r a g e L o c a t i o n .r e s ol v e ( fi l e N a me ); Fi l e s . co p y ( f i l e . g e t I nput S t r e a m ( ) , ta r g e t L o c a t i o n , S t a nda r dC o p y O p t i o n . RE P L A C E _ E X I S TI N G ); r e t ur n fi l e N a me ; } c a t c h ( IO E x c e p t i on ex ) { t hr o w ne w R un t i m e E x c e p t i o n ( \" C o ul d no t s t o r e f i l e \" + fi l e N a me + \" . P l e a s e t r y a g a i n! \" , e x ) ; } } Ad d t h i s me t h o d t o Fi l e C o n t r o l l e r - Te s t Fi l e S e r v i c e – St o r ing F ile @ P o s t M a ppi ng ( \"\" ) publ i c R e s po ns e E n t i t y < O bj e c t > f i l e U pl o a d ( @ R e que s t P a r a m ( \"f i l e \" ) M ul t i pa r t F i l e fi l e ) { fi l e S e r v i c e .s t or e (f i l e ); r e t ur n R e s po ns e E n t i t y . ok ( \" Y o u s uc c e s s f ul l y upl o a de d ” + f i l e . g e t O r i g i na l F i l e na m e ()); } F i l e S e r v i ce : Lo a d Fi l e publ i c Re s o u r c e lo ad F ile A s R e s o u r c e ( S t ri n g fi l eN a m e ) { tr y { Pa t h fi l eP a t h = th i s . fi l eS t o r a g eLo c a t i o n .r e s o l v e ( fi l eN a m e ) . n o rm a l i z e ( ) ; Re s o u r c e r e s o u r c e = ne w U rl R e s o u r c e ( fi l eP a t h . t o U ri ()); if ( re s o u r c e .e x i s ts ()) { r e t u rn re s o u r c e ; } el s e { th r o w n e w Ru n ti m e E x ce p ti on ( \"F i l e n o t f o u n d \" + fi l eN a m e ); } } cat c h ( M a l f o rm e d U R L E x c e p t i o n ex ) { th r o w n e w Ru n ti m e E x ce p ti on ( \"F i l e o p e r a t i o n e rr o r: \" + fi l eN a m e , e x ) ; } } Fi l e C o n t r o l l e r @ Ge t M a p p i n g ( \"/ { f i l en a me: . +} \" ) @ Re s p o n s e B o d y publ i c Re s p o n s e E n t i t y < Re s o u r c e > se r v e Fi l e ( @ Pa t h V a r i a b l e St r i n g fi l en a me) { Re s o u r c e f i l e = fi l eS er v i c e .lo adF ile A s R e s o ur c e (f ile nam e ); re t u r n Re s p o n s e E n t i t y . ok (). co n t e n t T y p e ( Me di a T y pe . I M A G E _ J PE G ).bo dy ( fi l e ); }","libVersion":"0.3.1","langs":""}